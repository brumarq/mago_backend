"""Init

Revision ID: 6ebc40f6a63b
Revises: 
Create Date: 2024-01-04 14:31:27.830562

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6ebc40f6a63b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Field',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('device_type_id', sa.Integer(), nullable=True),
    sa.Column('loggable', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('LogCollectionType',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('LogCollection',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('log_collection_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['log_collection_type_id'], ['LogCollectionType.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('MonthlyAverage',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('average_value', sa.Float(), nullable=False),
    sa.Column('min_value', sa.Float(), nullable=False),
    sa.Column('max_value', sa.Float(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=True),
    sa.Column('reference_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['Field.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('WeeklyAverage',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('average_value', sa.Float(), nullable=False),
    sa.Column('min_value', sa.Float(), nullable=False),
    sa.Column('max_value', sa.Float(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=True),
    sa.Column('reference_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['Field.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('YearlyAverage',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('average_value', sa.Float(), nullable=False),
    sa.Column('min_value', sa.Float(), nullable=False),
    sa.Column('max_value', sa.Float(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=True),
    sa.Column('reference_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['Field.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('LogValue',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=True),
    sa.Column('log_collection_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['field_id'], ['Field.id'], ),
    sa.ForeignKeyConstraint(['log_collection_id'], ['LogCollection.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('LogValue')
    op.drop_table('YearlyAverage')
    op.drop_table('WeeklyAverage')
    op.drop_table('MonthlyAverage')
    op.drop_table('LogCollection')
    op.drop_table('LogCollectionType')
    op.drop_table('Field')
    # ### end Alembic commands ###
